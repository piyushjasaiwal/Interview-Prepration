/*abstract
1. You are given a number N, which represents the count of buttons pressed on a mobile numeric keypad.
2. You can only press buttons that are up, left, right, down to the current button and the current button also.
3. You can not press bottom row corner buttons(* and #).

4. You have to find the count of different numbers that can be generated by pressing N number of buttons.
Input Format
A number N
Output Format
Check the sample output and question video.
Question Video

  COMMENTConstraints
1 <= N <= 30
Sample Input
2
Sample Output
36
*/

import java.io.*;
import java.util.*;

class numeric_keypad{

	public static int solution(int n) {
		//write your code here
		int [][] graph = 
		{{0,8},
		{1,2,4},
		{2,1,3,5},
		{3,2,6},
		{4,1,5,7},
		{5,2,4,8,6},
		{6,3,5,9},
		{7,4,8},
		{8,5,0,7,9},
		{9,6,8}
	};
		int [][] dp = new int[n][10];
		Arrays.fill(dp[0], 1);
		for(int i = 1;i<n;i++){
			for(int j = 0;j<10;j++){
				for(int num:graph[j]){
					dp[i][j] += dp[i-1][num];
				}
			}
		}

		int sum = 0;
		for(int i = 0;i<10;i++){
			sum+=dp[n-1][i];
		}
		return sum;
	}
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		System.out.println(solution(scn.nextInt()));
	}

}